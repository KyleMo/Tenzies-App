{"ast":null,"code":"var _jsxFileName = \"/Users/kylemonstad/Desktop/codingPractice/React/tenzies-app/src/components/Stopwatch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stopwatch = props => {\n  _s();\n\n  const [time, setTime] = React.useState(0);\n  React.useEffect(() => {\n    let interval;\n\n    if (running) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [props.running]);\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: time\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Stopwatch, \"5hWQWrdOaoNaY+yZN4rUVWF/ZFM=\");\n\n_c = Stopwatch;\nexport default Stopwatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"sources":["/Users/kylemonstad/Desktop/codingPractice/React/tenzies-app/src/components/Stopwatch.js"],"names":["React","Stopwatch","props","time","setTime","useState","useEffect","interval","running","setInterval","prevTime","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAAxB;AAGAL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpB,QAAIC,QAAJ;;AACA,QAAGC,OAAH,EAAW;AACTD,MAAAA,QAAQ,GAAGE,WAAW,CAAC,MAAM;AAC3BL,QAAAA,OAAO,CAACM,QAAQ,IAAIA,QAAQ,GAAG,EAAxB,CAAP;AACD,OAFqB,EAEpB,EAFoB,CAAtB;AAGD,KAJD,MAIO;AACLC,MAAAA,aAAa,CAACJ,QAAD,CAAb;AACD;;AAED,WAAO,MAAMI,aAAa,CAACJ,QAAD,CAA1B;AACD,GAXD,EAWE,CAACL,KAAK,CAACM,OAAP,CAXF;AAaA,sBACE;AAAA,cAAKL;AAAL;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CArBD;;GAAMF,S;;KAAAA,S;AAuBN,eAAeA,SAAf","sourcesContent":["import React from 'react'\n\nconst Stopwatch = (props) => {\n\n  const [time, setTime] = React.useState(0);\n\n\n  React.useEffect(() => {\n    let interval;\n    if(running){\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10)\n      },10)\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval)\n  },[props.running])\n\n  return (\n    <h2>{time}</h2>\n  )\n}\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}