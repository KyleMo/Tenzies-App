{"ast":null,"code":"var _jsxFileName = \"/Users/kylemonstad/Desktop/Tenzies/client/src/components/Leaderboards/Leaderboards.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\nimport './leaderboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Leaderboards = () => {\n  _s();\n\n  //api call for easy, medium, hard, and extreme games difficulties\n  const [savedTimes, setSavedTimes] = React.useState([{\n    dif: 'hard',\n    time: 5000,\n    user: 'kyle'\n  }, {\n    dif: 'hard',\n    time: 5500,\n    user: 'john'\n  }, {\n    dif: 'hard',\n    time: 7000,\n    user: 'phil'\n  }]);\n  const columns = [{\n    field: 'rank',\n    headerName: 'Rank',\n    width: 70\n  }, {\n    field: 'name',\n    headerName: 'First name',\n    width: 130\n  }, {\n    field: 'difficulty',\n    headerName: 'Difficulty',\n    width: 130\n  }, {\n    field: 'time',\n    headerName: 'Time',\n    width: 130\n  }]; //  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n\n  const tableData = savedTimes.map((match, index) => {\n    return {\n      id: index + 1,\n      user: match.user,\n      dif: match.dif\n    };\n    /*return (\n      <tr key={match.id}>\n        <td>{index+1}</td>\n        <td>{match.user}</td>\n        <td>{match.dif}</td>\n        <td>\n          <span>{(\"0\" + Math.floor((match.time / 60000) % 60)).slice(-2)}:</span>\n          <span>{(\"0\" + Math.floor((match.time / 1000) % 60)).slice(-2)}:</span>\n          <span>{(\"0\" + ((match.time / 10) % 100)).slice(-2)}</span>\n        </td>\n      </tr>\n    )*/\n  });\n  /*\n  <table className=\"best-game-table\">\n    <thead>\n      <tr>\n        <th>Rank</th>\n        <th>Name</th>\n        <th>Difficulty</th>\n        <th>Time</th>\n      </tr>\n    </thead>\n    <tbody>{tableData}</tbody>\n  </table>\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboards\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leaderboards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: tableData,\n      columns: columns,\n      pageSize: 5,\n      rowsPerPageOptions: [5],\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Leaderboards, \"jbJnLwSQKURCidNLssI3G5x65p0=\");\n\n_c = Leaderboards;\nexport default Leaderboards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboards\");","map":{"version":3,"sources":["/Users/kylemonstad/Desktop/Tenzies/client/src/components/Leaderboards/Leaderboards.js"],"names":["React","DataGrid","GridColDef","GridValueGetterParams","Leaderboards","savedTimes","setSavedTimes","useState","dif","time","user","columns","field","headerName","width","tableData","map","match","index","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,qBAA/B,QAA4D,kBAA5D;AACA,OAAO,mBAAP;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEzB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,KAAK,CAACO,QAAN,CAAe,CACjD;AACEC,IAAAA,GAAG,EAAE,MADP;AAEEC,IAAAA,IAAI,EAAE,IAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADiD,EAMjD;AACEF,IAAAA,GAAG,EAAE,MADP;AAEEC,IAAAA,IAAI,EAAE,IAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GANiD,EAWjD;AACEF,IAAAA,GAAG,EAAE,MADP;AAEEC,IAAAA,IAAI,EAAE,IAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAXiD,CAAf,CAApC;AAkBF,QAAMC,OAAqB,GAAG,CAC5B;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,UAAU,EAAE,MAA7B;AAAqCC,IAAAA,KAAK,EAAE;AAA5C,GAD4B,EAE5B;AAAEF,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,UAAU,EAAE,YAA7B;AAA2CC,IAAAA,KAAK,EAAE;AAAlD,GAF4B,EAG5B;AAAEF,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,UAAU,EAAE,YAAnC;AAAiDC,IAAAA,KAAK,EAAE;AAAxD,GAH4B,EAI5B;AAAEF,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,UAAU,EAAE,MAA7B;AAAqCC,IAAAA,KAAK,EAAE;AAA5C,GAJ4B,CAA9B,CArB2B,CA4B3B;;AACA,QAAMC,SAAS,GAAGV,UAAU,CAACW,GAAX,CAAe,CAACC,KAAD,EAAOC,KAAP,KAAiB;AAChD,WACE;AAACC,MAAAA,EAAE,EAAED,KAAK,GAAC,CAAX;AAAcR,MAAAA,IAAI,EAAEO,KAAK,CAACP,IAA1B;AAAgCF,MAAAA,GAAG,EAAES,KAAK,CAACT;AAA3C,KADF;AAGA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,GAhBiB,CAAlB;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEO,SADR;AAEE,MAAA,OAAO,EAAEJ,OAFX;AAGE,MAAA,QAAQ,EAAE,CAHZ;AAIE,MAAA,kBAAkB,EAAE,CAAC,CAAD,CAJtB;AAKE,MAAA,iBAAiB;AALnB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA5ED;;GAAMP,Y;;KAAAA,Y;AA8EN,eAAeA,YAAf","sourcesContent":["import React from 'react'\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\nimport './leaderboard.css'\n\nconst Leaderboards = () => {\n\n  //api call for easy, medium, hard, and extreme games difficulties\n  const [savedTimes, setSavedTimes] = React.useState([\n    {\n      dif: 'hard',\n      time: 5000,\n      user: 'kyle'\n    },\n    {\n      dif: 'hard',\n      time: 5500,\n      user: 'john'\n    },\n    {\n      dif: 'hard',\n      time: 7000,\n      user: 'phil'\n    }\n  ])\n\nconst columns: GridColDef[] = [\n  { field: 'rank', headerName: 'Rank', width: 70 },\n  { field: 'name', headerName: 'First name', width: 130 },\n  { field: 'difficulty', headerName: 'Difficulty', width: 130 },\n  { field: 'time', headerName: 'Time', width: 130 }\n];\n\n//  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\nconst tableData = savedTimes.map((match,index) => {\n  return(\n    {id: index+1, user: match.user, dif: match.dif,}\n  )\n  /*return (\n    <tr key={match.id}>\n      <td>{index+1}</td>\n      <td>{match.user}</td>\n      <td>{match.dif}</td>\n      <td>\n        <span>{(\"0\" + Math.floor((match.time / 60000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + Math.floor((match.time / 1000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + ((match.time / 10) % 100)).slice(-2)}</span>\n      </td>\n    </tr>\n  )*/\n})\n\n\n\n\n/*\n<table className=\"best-game-table\">\n  <thead>\n    <tr>\n      <th>Rank</th>\n      <th>Name</th>\n      <th>Difficulty</th>\n      <th>Time</th>\n    </tr>\n  </thead>\n  <tbody>{tableData}</tbody>\n</table>\n*/\n\n  return (\n    <div className=\"leaderboards\">\n      <h1>Leaderboards</h1>\n      <DataGrid\n        rows={tableData}\n        columns={columns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        checkboxSelection\n      />\n    </div>\n  )\n}\n\nexport default Leaderboards;\n"]},"metadata":{},"sourceType":"module"}