{"ast":null,"code":"var _jsxFileName = \"/Users/kylemonstad/Desktop/Tenzies/client/src/components/Leaderboards/Leaderboards.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './leaderboard.css';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TablePagination from '@mui/material/TablePagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Leaderboards = () => {\n  _s();\n\n  //api call for easy, medium, hard, and extreme games difficulties\n  const [savedTimes, setSavedTimes] = React.useState([{\n    dif: 'hard',\n    time: 5000,\n    user: 'kyle'\n  }, {\n    dif: 'hard',\n    time: 5500,\n    user: 'john'\n  }, {\n    dif: 'hard',\n    time: 7000,\n    user: 'phil'\n  }, {\n    dif: 'hard',\n    time: 5000,\n    user: 'kyle'\n  }, {\n    dif: 'hard',\n    time: 5500,\n    user: 'john'\n  }, {\n    dif: 'hard',\n    time: 7000,\n    user: 'phil'\n  }, {\n    dif: 'hard',\n    time: 5000,\n    user: 'kyle'\n  }, {\n    dif: 'hard',\n    time: 5500,\n    user: 'john'\n  }, {\n    dif: 'hard',\n    time: 7000,\n    user: 'phil'\n  }, {\n    dif: 'hard',\n    time: 5000,\n    user: 'kyle'\n  }, {\n    dif: 'hard',\n    time: 5500,\n    user: 'john'\n  }, {\n    dif: 'hard',\n    time: 7000,\n    user: 'phil'\n  }]);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const tableData = savedTimes.map((match, index) => {\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: match.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: match.dif\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: match.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n    /*return (\n      <tr key={match.id}>\n        <td>{index+1}</td>\n        <td>{match.user}</td>\n        <td>{match.dif}</td>\n        <td>\n          <span>{(\"0\" + Math.floor((match.time / 60000) % 60)).slice(-2)}:</span>\n          <span>{(\"0\" + Math.floor((match.time / 1000) % 60)).slice(-2)}:</span>\n          <span>{(\"0\" + ((match.time / 10) % 100)).slice(-2)}</span>\n        </td>\n      </tr>\n    )*/\n  });\n  /*\n  <table className=\"best-game-table\">\n    <thead>\n      <tr>\n        <th>Rank</th>\n        <th>Name</th>\n        <th>Difficulty</th>\n        <th>Time</th>\n      </tr>\n    </thead>\n    <tbody>{tableData}</tbody>\n  </table>\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboards\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leaderboards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 600\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: tableData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        component: \"div\",\n        count: tableData.length,\n        rowsPerPage: 10,\n        page: page,\n        onPageChange: handleChangePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Leaderboards, \"DCqyxNmz0xA5d6wG9YU7XNDTmNw=\");\n\n_c = Leaderboards;\nexport default Leaderboards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboards\");","map":{"version":3,"sources":["/Users/kylemonstad/Desktop/Tenzies/client/src/components/Leaderboards/Leaderboards.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","Leaderboards","savedTimes","setSavedTimes","useState","dif","time","user","order","setOrder","orderBy","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","tableData","map","match","index","minWidth","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './leaderboard.css'\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TablePagination from '@mui/material/TablePagination';\n\nconst Leaderboards = () => {\n\n  //api call for easy, medium, hard, and extreme games difficulties\n  const [savedTimes, setSavedTimes] = React.useState([\n    {\n      dif: 'hard',\n      time: 5000,\n      user: 'kyle'\n    },\n    {\n      dif: 'hard',\n      time: 5500,\n      user: 'john'\n    },\n    {\n      dif: 'hard',\n      time: 7000,\n      user: 'phil'\n    },\n    {\n      dif: 'hard',\n      time: 5000,\n      user: 'kyle'\n    },\n    {\n      dif: 'hard',\n      time: 5500,\n      user: 'john'\n    },\n    {\n      dif: 'hard',\n      time: 7000,\n      user: 'phil'\n    },\n    {\n      dif: 'hard',\n      time: 5000,\n      user: 'kyle'\n    },\n    {\n      dif: 'hard',\n      time: 5500,\n      user: 'john'\n    },\n    {\n      dif: 'hard',\n      time: 7000,\n      user: 'phil'\n    },\n    {\n      dif: 'hard',\n      time: 5000,\n      user: 'kyle'\n    },\n    {\n      dif: 'hard',\n      time: 5500,\n      user: 'john'\n    },\n    {\n      dif: 'hard',\n      time: 7000,\n      user: 'phil'\n    }\n  ])\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const tableData = savedTimes.map((match,index) => {\n    return(\n      <TableRow>\n        <TableCell>{index+1}</TableCell>\n        <TableCell align=\"right\">{match.user}</TableCell>\n        <TableCell align=\"right\">{match.dif}</TableCell>\n        <TableCell align=\"right\">{match.time}</TableCell>\n      </TableRow>\n    )\n  /*return (\n    <tr key={match.id}>\n      <td>{index+1}</td>\n      <td>{match.user}</td>\n      <td>{match.dif}</td>\n      <td>\n        <span>{(\"0\" + Math.floor((match.time / 60000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + Math.floor((match.time / 1000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + ((match.time / 10) % 100)).slice(-2)}</span>\n      </td>\n    </tr>\n  )*/\n})\n\n\n\n\n/*\n<table className=\"best-game-table\">\n  <thead>\n    <tr>\n      <th>Rank</th>\n      <th>Name</th>\n      <th>Difficulty</th>\n      <th>Time</th>\n    </tr>\n  </thead>\n  <tbody>{tableData}</tbody>\n</table>\n*/\n\n  return (\n    <div className=\"leaderboards\">\n      <h1>Leaderboards</h1>\n      <Table sx={{ minWidth: 600 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Rank</TableCell>\n            <TableCell align=\"right\">Name</TableCell>\n            <TableCell align=\"right\">Difficulty</TableCell>\n            <TableCell align=\"right\">Time</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tableData}\n        </TableBody>\n        <TablePagination\n          component=\"div\"\n          count={tableData.length}\n          rowsPerPage={10}\n          page={page}\n          onPageChange={handleChangePage}\n        />\n      </Table>\n\n    </div>\n  )\n}\n\nexport default Leaderboards;\n"]},"metadata":{},"sourceType":"module"}