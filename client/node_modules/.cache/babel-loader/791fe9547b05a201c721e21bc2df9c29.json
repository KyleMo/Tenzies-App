{"ast":null,"code":"var _jsxFileName = \"/Users/kylemonstad/Desktop/codingPractice/React/tenzies-app/src/components/Stopwatch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stopwatch = props => {\n  _s();\n\n  const [time, setTime] = React.useState(0);\n  React.useEffect(() => {\n    let interval;\n\n    if (props.running) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n  }, [props.running]);\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [(\"0\" + Math.floor(time / 60000 % 60)).slice(-2), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [(\"0\" + Math.floor(time / 1000 % 60)).slice(-2), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: (\"0\" + time / 10 % 100).slice(-2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Stopwatch, \"5hWQWrdOaoNaY+yZN4rUVWF/ZFM=\");\n\n_c = Stopwatch;\nexport default Stopwatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"sources":["/Users/kylemonstad/Desktop/codingPractice/React/tenzies-app/src/components/Stopwatch.js"],"names":["React","Stopwatch","props","time","setTime","useState","useEffect","interval","running","setInterval","prevTime","clearInterval","Math","floor","slice"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAAxB;AAGAL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpB,QAAIC,QAAJ;;AACA,QAAGL,KAAK,CAACM,OAAT,EAAiB;AACfD,MAAAA,QAAQ,GAAGE,WAAW,CAAC,MAAM;AAC3BL,QAAAA,OAAO,CAACM,QAAQ,IAAIA,QAAQ,GAAG,EAAxB,CAAP;AACD,OAFqB,EAEpB,EAFoB,CAAtB;AAGD,KAJD,MAIO;AACLC,MAAAA,aAAa,CAACJ,QAAD,CAAb;AACD;AAEF,GAVD,EAUE,CAACL,KAAK,CAACM,OAAP,CAVF;AAYA,sBACE;AAAA,4BACE;AAAA,iBAAO,CAAC,MAAMI,IAAI,CAACC,KAAL,CAAYV,IAAI,GAAG,KAAR,GAAiB,EAA5B,CAAP,EAAwCW,KAAxC,CAA8C,CAAC,CAA/C,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBAAO,CAAC,MAAMF,IAAI,CAACC,KAAL,CAAYV,IAAI,GAAG,IAAR,GAAgB,EAA3B,CAAP,EAAuCW,KAAvC,CAA6C,CAAC,CAA9C,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAO,CAAC,MAAQX,IAAI,GAAG,EAAR,GAAc,GAAtB,EAA4BW,KAA5B,CAAkC,CAAC,CAAnC;AAAP;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAxBD;;GAAMb,S;;KAAAA,S;AA0BN,eAAeA,SAAf","sourcesContent":["import React from 'react'\n\nconst Stopwatch = (props) => {\n\n  const [time, setTime] = React.useState(0);\n\n\n  React.useEffect(() => {\n    let interval;\n    if(props.running){\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10)\n      },10)\n    } else {\n      clearInterval(interval);\n    }\n\n  },[props.running])\n\n  return (\n    <h2>\n      <span>{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\n      <span>{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:</span>\n      <span>{(\"0\" + ((time / 10) % 100)).slice(-2)}</span>\n    </h2>\n  )\n}\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}