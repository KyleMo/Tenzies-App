{"ast":null,"code":"var _jsxFileName = \"/Users/kylemonstad/Desktop/codingPractice/React/tenzies-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Die from './components/Die.js';\nimport { nanoid } from 'nanoid';\nimport Confetti from 'react-confetti';\n/**\n * Challenge: Allow the user to play a new game when the\n * button is clicked and they've already won\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tenzies, setTenzies] = React.useState(false);\n  const [diceArr, setDiceArr] = React.useState(allNewDice());\n  React.useEffect(() => {\n    const allHeld = diceArr.every(dice => dice.isHeld);\n    const allSameVal = diceArr.every(dice => dice.value === diceArr[0].value);\n\n    if (allHeld && allSameVal) {\n      setTenzies(true);\n    }\n  }, [diceArr]);\n\n  function generateNewDie() {\n    return {\n      value: Math.floor(Math.random() * 6) + 1,\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n\n  function allNewDice() {\n    const diceArray = [];\n    let i = 0;\n\n    while (i < 10) {\n      diceArray.push(generateNewDie());\n      i++;\n    }\n\n    return diceArray;\n  }\n\n  function rollDice() {\n    if (tenzies) {\n      console.log(tenzies);\n      setTenzies(false);\n      allNewDice();\n    } else {\n      setDiceArr(diceArr => diceArr.map(dice => {\n        return dice.isHeld ? dice : generateNewDie();\n      }));\n    }\n  }\n\n  function setTrue(id) {\n    setDiceArr(prevArr => prevArr.map(dice => {\n      return id === dice.id ? { ...dice,\n        isHeld: !dice.isHeld\n      } : dice;\n    }));\n  }\n\n  const dies = diceArr.map((dice, index) => /*#__PURE__*/_jsxDEV(Die, {\n    isHeld: dice.isHeld,\n    eventHandle: () => setTrue(dice.id),\n    value: dice.value\n  }, dice.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 44\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main-app\",\n    children: [tenzies && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"die-container\",\n      children: dies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rollDice,\n      className: \"roll-die-btn\",\n      children: tenzies ? \"New Game\" : \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NEAC3b2hoO+jMxM98+USqa4wOXk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kylemonstad/Desktop/codingPractice/React/tenzies-app/src/App.js"],"names":["React","Die","nanoid","Confetti","App","tenzies","setTenzies","useState","diceArr","setDiceArr","allNewDice","useEffect","allHeld","every","dice","isHeld","allSameVal","value","generateNewDie","Math","floor","random","id","diceArray","i","push","rollDice","console","log","map","setTrue","prevArr","dies","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Die from './components/Die.js'\nimport {nanoid} from 'nanoid'\nimport Confetti from 'react-confetti'\n\n/**\n * Challenge: Allow the user to play a new game when the\n * button is clicked and they've already won\n */\n\nfunction App() {\n\n  const [tenzies, setTenzies] = React.useState(false)\n  const [diceArr, setDiceArr] = React.useState(allNewDice())\n\n  React.useEffect(() => {\n\n    const allHeld = diceArr.every((dice) => dice.isHeld)\n    const allSameVal = diceArr.every((dice) => dice.value === diceArr[0].value)\n\n    if (allHeld && allSameVal){\n      setTenzies(true)\n    }\n\n  },[diceArr])\n\n  function generateNewDie() {\n    return {\n      value: Math.floor(Math.random() * 6)+1,\n      isHeld: false,\n      id: nanoid()\n    }\n  }\n\n  function allNewDice() {\n    const diceArray = []\n    let i = 0;\n    while (i < 10){\n      diceArray.push(generateNewDie());\n      i++;\n    }\n    return diceArray;\n  }\n\n  function rollDice() {\n    if (tenzies){\n      console.log(tenzies)\n      setTenzies(false)\n      allNewDice()\n    }\n    else {\n      setDiceArr(diceArr => diceArr.map(dice => {\n        return dice.isHeld ? dice : generateNewDie()\n      }));\n    }\n\n  }\n\n  function setTrue(id){\n    setDiceArr(prevArr => prevArr.map(dice => {\n      return id === dice.id ? ({...dice, isHeld: !dice.isHeld}) : dice\n      }))\n  }\n\n  const dies = diceArr.map((dice,index) => <Die key={dice.id} isHeld={dice.isHeld} eventHandle={() => setTrue(dice.id)} value={dice.value} />)\n\n  return (\n    <main className=\"main-app\">\n      {tenzies && <Confetti />}\n      <h1 className=\"title\">Tenzies</h1>\n      <p className=\"instructions\">Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\n      <div className=\"die-container\">\n        {dies}\n      </div>\n      <button onClick={rollDice} className=\"roll-die-btn\">{tenzies?\"New Game\":\"Roll\"}</button>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}